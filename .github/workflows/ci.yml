name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.15.0
    
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
    
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run linting
      run: pnpm lint
    
    - name: Run type checking
      run: pnpm type-check
    
    - name: Build project
      run: pnpm build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: apps/chrome-extension/dist/
        retention-days: 7

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.15.0
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build project
      run: pnpm build
    
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: apps/chrome-extension/dist/**/*
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          ## ðŸš€ Chrome Extension Release
          
          ### Changes
          - Automated build from main branch
          - Build number: ${{ github.run_number }}
          
          ### Installation
          1. Download the extension files
          2. Open Chrome and go to `chrome://extensions/`
          3. Enable Developer mode
          4. Click "Load unpacked" and select the dist folder
          
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
